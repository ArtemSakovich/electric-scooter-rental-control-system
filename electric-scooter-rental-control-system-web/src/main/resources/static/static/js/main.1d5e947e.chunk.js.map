{"version":3,"sources":["service/auth.service.js","component/util/login.component.js","component/util/register.component.js","component/util/profile.component.js","http.common.js","service/auth-header.js","service/city.service.js","service/rental-point.service.js","component/city/city-list.component.js","service/scooter-model.service.js","component/city/city-manager-list.component.js","service/scooter.service.js","component/scooter/scooter-list.component.js","component/scooter/scooter.component.js","component/scooter/scooter-add.component.js","component/scooter-rental-point/rental-point-list.component.js","component/scooter-rental-point/scooter-rental-point.component.js","component/scooter-rental-point/add-rental-point.component.js","component/scooter-model/scooter-model-list.component.js","component/scooter-model/scooter-model-add.component.js","component/scooter-model/scooter-model.component.js","component/city/city-add.component.js","component/city/city.component.js","service/subscription.service.js","service/user.service.js","component/subscription/subscription-list.component.js","component/subscription/add-subscription.component.js","component/subscription/subscription.component.js","service/role.service.js","component/user/user.component.js","component/user/user-list.component.js","component/subscription/user-subscription-list.component.js","service/ride.service.js","component/ride/order-ride.component.js","component/ride/rides-list.component.js","component/ride/user-ride-session.list.component.js","component/user/update-user-profile.component.js","component/scooter/user-scooter-list.component.js","component/scooter-rental-point/user-scooter-rental-point.component.js","component/city/user-city-list.component.js","component/ride/ride-session-for-single-scooter.component.js","App.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","data","token","localStorage","setItem","JSON","stringify","removeItem","name","surname","age","parse","getItem","required","value","className","role","isEmail","Login","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","onChange","validations","disabled","style","display","Component","vpassword","Register","handleRegister","onChangeName","onChangeSurname","onChangeAge","successful","register","Profile","currentUser","getCurrentUser","substring","indexOf","to","id","create","baseURL","headers","authHeader","user","Authorization","http","get","put","delete","CityList","retrieveCities","setActiveCity","cities","rentalPoints","currentCity","currentIndex","CityService","getAll","console","log","catch","city","index","RentalPointService","getAllByCity","map","onClick","rentalPoint","street","buildingNumber","CityManagerList","getById","ScooterList","retrieveScooters","setActiveScooter","scooters","currentScooter","scooterModel","ScooterService","scooter","ScooterModelService","modelId","scooterRentalPointId","pricePerHour","status","title","passedHours","Scooter","onChangeScooterModel","onChangeScooterStatus","onChangePricePerHour","onChangePassedHours","onChangeRentalPoint","getScooterModels","getRentalPoints","getScooter","updateScooter","deleteScooter","scooterModels","match","params","prevState","scooterStatus","newPricePerHour","newPassedHours","update","selected","ScooterAdd","addScooter","defaultValue","RentalPointList","retrieveRentalPoints","setActiveRentalPoint","currentRentalPoint","cityId","ScooterRentalPoint","getRentalPoint","getCities","onChangeStreet","onChangeBuildingNumber","onChangeCity","deleteRentalPoint","updateRentalPoint","newStreet","newBuildingNumber","newCity","RentalPointAdd","addRentalPoint","ScooterRentalPointService","addScooterRentalPoint","hidden","retrieveScooterModels","setActiveScooterModel","currentScooterModel","ScooterModelAdd","onChangeTitle","addScooterModel","addModel","ScooterModel","getScooterModel","updateScooterModel","deleteScooterModel","newTitle","CityAdd","addCity","City","getCity","updateCity","deleteCity","newName","SubscriptionList","retrieveSubscriptions","setActiveSubscription","subscriptions","currentSubscription","SubscriptionService","subscription","UserService","userId","discountPercentage","price","balance","SubscriptionAdd","getUsers","onChangeUser","onChangePrice","onChangeBalance","onChangeDiscountPercentage","addSubscription","users","Subscription","getSubscription","updateSubscription","deleteSubscription","newUser","newPrice","newBalance","newDiscountPercentage","User","getUser","getRoles","onChangeRole","updateUser","deleteUser","roleId","roles","RoleService","newRole","newEmail","newSurname","newAge","updateWithRole","retrieveUsers","setActiveUser","UserSubscriptionList","getAllSubscriptionsByUser","OrderRide","onChangeScooter","onChangeReturnRentalPoint","onChangeRideHours","orderRide","scooterId","returnScooterRentalPointId","rideHours","getAllAvailableScootersByRentalPointId","RideService","RideList","retrieveRideSessions","setActiveRideSession","rideSessions","currentRideSession","rideSession","returnRentalPoint","createdOn","UserRideList","getAllByUser","UpdateUserProfile","updateWithoutRole","UserScooterList","getAllByRentalPoint","UserRentalPointList","UserCityList","RideSessionsForSingleScooter","getAllByScooterId","App","logOut","undefined","logout","includes","exact","path","component","CitiesList","RentalPoint","ScooterModelList","CitiesManagerList","UserList","RideSessionsList","UserRideSessionsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d5e947e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"/api/auth/\";\n\nclass AuthService {\n    login(email, password) {\n        return axios\n            .post(API_URL + \"signin\", {\n                email,\n                password\n            })\n            .then(response => {\n                if (response.data.token) {\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\n                }\n                return response.data;\n            });\n    }\n\n    logout() {\n        localStorage.removeItem(\"user\");\n    }\n\n    register(email, password, name, surname, age) {\n        return axios.post(API_URL + \"signup\", {\n            email,\n            password,\n            name,\n            surname,\n            age\n        });\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));;\n    }\n}\n\nexport default new AuthService();","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../../service/auth.service\";\nimport {isEmail} from \"validator\";\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nconst email = value => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n            </div>\n        );\n    }\n};\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            loading: false,\n            message: \"\"\n        };\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.login(this.state.email, this.state.password).then(\n                () => {\n                    this.props.history.push(\"/profile\");\n                    window.location.reload();\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                    <img\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                        alt=\"profile-img\"\n                        className=\"profile-img-card\"\n                    />\n\n                    <Form\n                        onSubmit={this.handleLogin}\n                        ref={c => {\n                            this.form = c;\n                        }}\n                    >\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Email</label>\n                            <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"username\"\n                                value={this.state.email}\n                                onChange={this.onChangeEmail}\n                                validations={[required, email]}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <Input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.onChangePassword}\n                                validations={[required]}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <button\n                                className=\"btn btn-primary btn-block\"\n                                disabled={this.state.loading}\n                            >\n                                {this.state.loading && (\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\n                                )}\n                                <span>Login</span>\n                            </button>\n                        </div>\n\n                        {this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {this.state.message}\n                                </div>\n                            </div>\n                        )}\n                        <CheckButton\n                            style={{ display: \"none\" }}\n                            ref={c => {\n                                this.checkBtn = c;\n                            }}\n                        />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport AuthService from \"../../service/auth.service\";\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nconst email = value => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n            </div>\n        );\n    }\n};\n\nconst vpassword = value => {\n    if (value.length < 2 || value.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 2 and 40 characters.\n            </div>\n        );\n    }\n};\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeSurname = this.onChangeSurname.bind(this);\n        this.onChangeAge = this.onChangeAge.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            name: \"\",\n            surname: \"\",\n            age: 0,\n            successful: false,\n            message: \"\"\n        };\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeSurname(e) {\n        this.setState({\n            surname: e.target.value\n        });\n    }\n\n    onChangeAge(e) {\n        this.setState({\n            age: e.target.value\n        });\n    }\n\n    handleRegister(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            successful: false\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.register(\n                this.state.email,\n                this.state.password,\n                this.state.name,\n                this.state.surname,\n                this.state.age\n            ).then(\n                response => {\n                    this.setState({\n                        message: response.data.message,\n                        successful: true\n                    });\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        successful: false,\n                        message: resMessage\n                    });\n                }\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                    <img\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                        alt=\"profile-img\"\n                        className=\"profile-img-card\"\n                    />\n\n                    <Form\n                        onSubmit={this.handleRegister}\n                        ref={c => {\n                            this.form = c;\n                        }}\n                    >\n                        {!this.state.successful && (\n                            <div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Email</label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"username\"\n                                        value={this.state.email}\n                                        onChange={this.onChangeEmail}\n                                        validations={[required, email]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\">Password</label>\n                                    <Input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChangePassword}\n                                        validations={[required, vpassword]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Name</label>\n                                    <Input\n                                        type=\"name\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        value={this.state.name}\n                                        onChange={this.onChangeName}\n                                        validations={[required]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"surname\">Surname</label>\n                                    <Input\n                                        type=\"surname\"\n                                        className=\"form-control\"\n                                        name=\"surname\"\n                                        value={this.state.surname}\n                                        onChange={this.onChangeSurname}\n                                        validations={[required]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"age\">Age</label>\n                                    <Input\n                                        type=\"age\"\n                                        className=\"form-control\"\n                                        name=\"age\"\n                                        value={this.state.age}\n                                        onChange={this.onChangeAge}\n                                        validations={[required]}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                                </div>\n                            </div>\n                        )}\n\n                        {this.state.message && (\n                            <div className=\"form-group\">\n                                <div\n                                    className={\n                                        this.state.successful\n                                            ? \"alert alert-success\"\n                                            : \"alert alert-danger\"\n                                    }\n                                    role=\"alert\"\n                                >\n                                    {this.state.message}\n                                </div>\n                            </div>\n                        )}\n                        <CheckButton\n                            style={{ display: \"none\" }}\n                            ref={c => {\n                                this.checkBtn = c;\n                            }}\n                        />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport AuthService from \"../../service/auth.service\";\nimport {Link} from \"react-router-dom\";\n\nexport default class Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentUser: AuthService.getCurrentUser()\n        };\n    }\n\n    render() {\n        const { currentUser } = this.state;\n        return (\n            <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                <header className=\"jumbotron\">\n                    <img\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                        alt=\"profile-img\"\n                        className=\"profile-img-card\"\n                    /><br/>\n                    <h4>\n                        <strong>{currentUser.email}</strong>\n                    </h4>\n                </header><br/><br/><br/>\n                <p>\n                    <strong>Name:</strong>{\" \"}\n                    {currentUser.name}\n                </p>\n                <p>\n                    <strong>Surname:</strong>{\" \"}\n                    {currentUser.surname}\n                </p>\n                <p>\n                    <strong>Age:</strong>{\" \"}\n                    {currentUser.age}\n                </p>\n                <p>\n                    <strong>Role:</strong>{\" \"}\n                    {currentUser.role.substring(currentUser.role.indexOf('_') + 1, currentUser.role.indexOf(']'))}\n                </p>\n                    <Link\n                        to={\"/edit-profile/\" + currentUser.id}\n                        className=\"btn btn-primary btn-block editButton\"\n                    >\n                        Edit\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"/api\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.token) {\n        return { Authorization: 'Bearer ' + user.token };\n    } else {\n        return {};\n    }\n}","import http from \"../http.common\"\nimport authHeader from \"./auth-header\";\n\nclass CityService {\n\n    addCity(data) {\n        return http.post(\"/manager/city\", data, {headers: authHeader()} );\n    }\n\n    getAll() {\n        return http.get(\"/cities\")\n    }\n\n    getById(id) {\n        return http.get(`/user/cities/${id}`, { headers: authHeader() });\n    }\n\n    update(data) {\n        return http.put(\"/manager/city\", data, { headers: authHeader() });\n    }\n\n    delete(id) {\n        return http.delete(`/manager/city/${id}`, { headers: authHeader() })\n    }\n}\n\nexport default new CityService();","import http from \"../http.common\"\nimport authHeader from \"./auth-header\";\n\nclass RentalPointService {\n\n    addScooterRentalPoint(data) {\n        return http.post(\"/manager/scooter-rental-point\", data, { headers: authHeader() });\n    }\n\n    getAllByCity(id) {\n        return http.get(`/scooter-rental-points/${id}`);\n    }\n\n    getById(id) {\n        return http.get(`/user/rental-points/${id}`, { headers: authHeader() });\n    }\n\n    getAll() {\n        return http.get(\"/user/rental-points\", { headers: authHeader() });\n    }\n\n    update(data) {\n        return http.put(\"/manager/scooter-rental-point\", data, { headers: authHeader() });\n    }\n\n    delete(id) {\n        return http.delete(`/manager/scooter-rental-point/${id}`, { headers: authHeader() })\n    }\n}\n\nexport default new RentalPointService();","import React, { Component } from \"react\";\nimport {Link, Route, Switch} from \"react-router-dom\"\nimport CityService from \"../../service/city.service\"\nimport RentalPointService from \"../../service/rental-point.service\";\n\nexport default class CityList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveCities = this.retrieveCities.bind(this);\n        this.setActiveCity = this.setActiveCity.bind(this);\n\n        this.state = {\n            cities: [],\n            rentalPoints: [],\n            currentCity: null,\n            currentIndex: -1,\n        }\n        ;\n    }\n\n    componentDidMount() {\n        this.retrieveCities();\n    }\n\n    retrieveCities() {\n        CityService.getAll()\n            .then(response => {\n                this.setState({\n                    cities: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveCity(city, index) {\n        RentalPointService.getAllByCity(city.id)\n            .then(response => {\n                this.setState({\n                    rentalPoints: response.data,\n                    currentCity: city,\n                    currentIndex: index\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { cities, rentalPoints, currentCity, currentIndex } = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>Where can you visit us?</h4><br/>\n                    <ul className=\"list-group\">\n                        {cities &&\n                        cities.map((city, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveCity(city, index)}\n                                key={index}\n                            >\n                                {city.name}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentCity ? (\n                        <div>\n                            <div className={\"rounded-list\"}><br/><br/>\n                                <strong>Rental points:</strong><br/>\n                                <ol>\n                                    {rentalPoints &&\n                                    rentalPoints.map((rentalPoint, index) => (\n                                        <li>\n                                            <p>st. {rentalPoint.street}, {rentalPoint.buildingNumber}</p>\n                                        </li>\n                                    ))}\n                                </ol>\n                            </div>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br/>\n                            <br/>\n                            <p>Please click on a city</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import http from \"../http.common\"\nimport authHeader from \"./auth-header\";\n\nclass ScooterModelService {\n\n    addModel(data) {\n        return http.post(\"/manager/scooter-model\", data, { headers: authHeader() });\n    }\n\n    getById(id) {\n        return http.get(`/user/scooter-models/${id}`, { headers: authHeader() });\n    }\n\n    getAll() {\n        return http.get(\"/manager/scooter-models\", { headers: authHeader() });\n    }\n\n    update(data) {\n        return http.put(\"/manager/scooter-model\", data, { headers: authHeader() });\n    }\n\n    delete(id) {\n        return http.delete(`/manager/scooter-model/${id}`, { headers: authHeader() })\n    }\n}\n\nexport default new ScooterModelService();","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ScooterModelService from \"../../service/scooter-model.service\"\nimport CityService from \"../../service/city.service\"\n\nexport default class CityManagerList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveCities = this.retrieveCities.bind(this);\n        this.setActiveCity = this.setActiveCity.bind(this);\n\n        this.state = {\n            cities: [],\n            currentCity: null,\n            currentIndex: -1\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveCities();\n    }\n\n    retrieveCities() {\n        CityService.getAll()\n            .then(response => {\n                this.setState({\n                    cities: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveCity(city, index) {\n        CityService.getById(city.id)\n            .then(response => {\n                this.setState({\n                    currentCity: response.data,\n                    currentIndex: index\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { cities, currentCity, currentIndex} = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All cities</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {cities &&\n                        cities.map((city, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveCity(city, index)}\n                                key={index}\n                            >\n                                {city.name}\n                            </li>\n                        ))}\n                    </ul>\n                    <Link\n                        to={\"/add-city\"}\n                        className=\"btn btn-primary btn-block updateButton\"\n                    >\n                        Add city\n                    </Link>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentCity ? (\n                        <div><br/><br/>\n                            <h4>City</h4><br/>\n                            <div>\n                                <strong>Name: </strong>{currentCity.name}\n                            </div><br/>\n                            <Link\n                                to={\"/cities/\" + currentCity.id}\n                                className=\"btn btn-primary btn-block editButton\"\n                            >\n                                Edit\n                            </Link>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on city</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import http from \"../http.common\"\nimport authHeader from \"./auth-header\";\n\nclass ScooterService {\n\n    addScooter(data) {\n        return http.post(\"/manager/scooter\", data, { headers: authHeader() });\n    }\n\n    getScooter(id) {\n        return http.get(`/user/scooters/${id}`, { headers: authHeader() })\n    }\n\n    getAll() {\n        return http.get(\"/manager/scooters\", { headers: authHeader() })\n    }\n\n    update(data) {\n        return http.put(\"/manager/scooter\", data, { headers: authHeader() });\n    }\n\n    delete(id) {\n        return http.delete(`/manager/scooter/${id}`, { headers: authHeader() })\n    }\n\n    getAllAvailableScootersByRentalPointId(id) {\n        return http.get(`/user/rental-point/available-scooters/${id}`, { headers: authHeader() })\n    }\n\n\n    getAllByRentalPoint(id) {\n        return http.get(`/user/rental-point/scooters/${id}`, { headers: authHeader() })\n    }\n}\n\nexport default new ScooterService();","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ScooterService from \"../../service/scooter.service\"\nimport ScooterModelService from \"../../service/scooter-model.service\"\nimport RentalPointService from \"../../service/rental-point.service\"\n\nexport default class ScooterList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveScooters = this.retrieveScooters.bind(this);\n        this.setActiveScooter = this.setActiveScooter.bind(this);\n\n        this.state = {\n            scooters: [],\n            currentScooter: null,\n            currentIndex: -1,\n            rentalPoint: null,\n            scooterModel: null\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveScooters();\n    }\n\n    retrieveScooters() {\n        ScooterService.getAll()\n            .then(response => {\n                this.setState({\n                    scooters: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveScooter(scooter, index) {\n        ScooterModelService.getById(scooter.modelId)\n            .then(response => {\n                this.setState({\n                    scooterModel: response.data,\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        RentalPointService.getById(scooter.scooterRentalPointId)\n            .then(response => {\n                this.setState({\n                    rentalPoint: response.data,\n                    currentScooter: scooter,\n                    currentIndex: index,\n                    scooterModel: this.state.scooterModel,\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { scooters, currentScooter, currentIndex, rentalPoint, scooterModel} = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All scooters</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {scooters &&\n                        scooters.map((scooter, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveScooter(scooter, index)}\n                                key={index}\n                            >\n                                Price: {scooter.pricePerHour} BYN <strong>- {scooter.status}</strong>\n                            </li>\n                        ))}\n                    </ul>\n                    <Link\n                        to={\"/add-scooter\"}\n                        className=\"btn btn-primary btn-block updateButton\"\n                    >\n                        Add scooter\n                    </Link>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentScooter ? (\n                        <div><br/><br/>\n                            <h4>Scooter</h4><br/>\n                            <div>\n                                <strong>Model: </strong>{scooterModel==null ? \"\" : scooterModel.title}\n                            </div><br/>\n                            <div>\n                                <strong>Status: </strong>{currentScooter.status}\n                            </div><br/>\n                            <div>\n                                <strong>Price per hour: </strong>{currentScooter.pricePerHour} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Mileage: </strong>{currentScooter.passedHours} hours\n                            </div><br/>\n                            <div>\n                                    <strong>Rental point: </strong>st. {rentalPoint.street}, {rentalPoint.buildingNumber}\n                            </div><br/>\n                            <Link\n                                to={\"/ride-sessions-for-single-scooter/\" + currentScooter.id}\n                            >\n                                Ride sessions\n                            </Link><br/>\n                            <Link\n                                to={\"/scooters/\" + currentScooter.id}\n                                className=\"btn btn-primary btn-block editButton\"\n                            >\n                                Edit\n                            </Link>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on scooter</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from \"react\";\nimport ScooterService from \"../../service/scooter.service\"\nimport ScooterModelService from \"../../service/scooter-model.service\"\nimport RentalPointService from \"../../service/rental-point.service\"\n\nexport default class Scooter extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeScooterModel = this.onChangeScooterModel.bind(this);\n        this.onChangeScooterStatus = this.onChangeScooterStatus.bind(this);\n        this.onChangePricePerHour = this.onChangePricePerHour.bind(this);\n        this.onChangePassedHours = this.onChangePassedHours.bind(this);\n        this.onChangeRentalPoint = this.onChangeRentalPoint.bind(this);\n        this.getScooterModels = this.getScooterModels.bind(this);\n        this.getRentalPoints = this.getRentalPoints.bind(this);\n        this.getScooter = this.getScooter.bind(this);\n        this.updateScooter = this.updateScooter.bind(this);\n        this.deleteScooter = this.deleteScooter.bind(this);\n\n        this.state = {\n            currentScooter: {\n                id: null,\n                modelId: null,\n                status: \"\",\n                pricePerHour: 0.0,\n                passedHours: 0,\n                scooterRentalPointId: null\n            },\n            scooterModels: [],\n            rentalPoints: [],\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getScooterModels();\n        this.getRentalPoints();\n        this.getScooter(this.props.match.params.id);\n    }\n\n    getScooter(id) {\n        ScooterService.getScooter(id)\n            .then(response => {\n                this.setState({\n                    currentScooter: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    getScooterModels() {\n        ScooterModelService.getAll()\n            .then(response => {\n                this.setState({\n                    scooterModels: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    getRentalPoints() {\n        RentalPointService.getAll()\n            .then(response => {\n                this.setState({\n                    rentalPoints: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeScooterModel(e) {\n        const scooterModel = e.target.value;\n        console.log(e.target.value)\n        this.setState(function(prevState) {\n            return {\n                currentScooter: {\n                    ...prevState.currentScooter,\n                    modelId: scooterModel\n                }\n            };\n        });\n    }\n\n    onChangeScooterStatus(e) {\n        const scooterStatus = e.target.value;\n\n        this.setState(prevState => ({\n            currentScooter: {\n                ...prevState.currentScooter,\n                status: scooterStatus\n            }\n        }));\n    }\n\n    onChangePricePerHour(e) {\n        const newPricePerHour = e.target.value;\n        this.setState(prevState => ({\n            currentScooter: {\n                ...prevState.currentScooter,\n                pricePerHour: newPricePerHour\n            }\n        }));\n        console.log(this.state)\n    }\n\n    onChangePassedHours(e) {\n        const newPassedHours = e.target.value;\n        this.setState(prevState => ({\n            currentScooter: {\n                ...prevState.currentScooter,\n                passedHours: newPassedHours\n            }\n        }));\n    }\n\n    onChangeRentalPoint(e) {\n        const rentalPoint = e.target.value;\n\n        this.setState(prevState => ({\n            currentScooter: {\n                ...prevState.currentScooter,\n                scooterRentalPointId: rentalPoint\n            }\n        }));\n    }\n\n    updateScooter() {\n        ScooterService.update(\n            this.state.currentScooter\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The scooter was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteScooter() {\n        ScooterService.delete(this.state.currentScooter.id)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The scooter was deleted successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentScooter, scooterModels, rentalPoints} = this.state;\nconsole.log(\"current scooter \" + currentScooter)\n        return (\n            <div>\n                {currentScooter ? (\n                    <div className=\"edit-form\">\n                        <h4>Scooter</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label>Scooter model: </label>\n                                <select onChange={this.onChangeScooterModel} id=\"scooterModelSelector\">\n                                        {scooterModels &&\n                                        scooterModels.map((scooterModel) => (\n                                                <option selected={currentScooter.modelId === scooterModel.id}\n                                                        value={scooterModel.id}>{scooterModel.title}\n                                                    </option>\n                                        ))}\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Status:</label>\n                                <select onChange={this.onChangeScooterStatus} id=\"statusSelector\">\n                                    <option selected={currentScooter.status === 'AVAILABLE'}\n                                            value=\"AVAILABLE\">Available</option>\n                                    <option selected={currentScooter.status === 'CHARGING'}\n                                            value=\"CHARGING\">Charging</option>\n                                    <option selected={currentScooter.status === 'BUSY'}\n                                            value=\"BUSY\">Busy</option>\n                                    <option selected={currentScooter.status === 'FAULTY'}\n                                            value=\"FAULTY\">Faulty</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Price per hour: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"description\"\n                                    value={currentScooter.pricePerHour}\n                                    onChange={this.onChangePricePerHour}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"passedHours\">Mileage in hours: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"passedHours\"\n                                    value={currentScooter.passedHours}\n                                    onChange={this.onChangePassedHours}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Rental point: </label>\n                                <select onChange={this.onChangeRentalPoint} id=\"rentalPointSelector\">\n                                        {rentalPoints &&\n                                        rentalPoints.map((rentalPoint) => (\n                                                <option selected={currentScooter.scooterRentalPointId === rentalPoint.id}\n                                                    value={rentalPoint.id}>st. {rentalPoint.street}, {rentalPoint.buildingNumber}</option>\n                                        ))}\n                                </select>\n                            </div>\n                        </form>\n                        <button\n                            className=\"btn btn-primary btn-block deleteButton\"\n                            onClick={this.deleteScooter}\n                        >\n                            Delete\n                        </button>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block updateButton\"\n                            onClick={this.updateScooter}\n                        >\n                            Update\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Please click on a scooter...</p>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport ScooterService from \"../../service/scooter.service\"\nimport ScooterModelService from \"../../service/scooter-model.service\"\nimport RentalPointService from \"../../service/rental-point.service\"\n\nexport default class ScooterAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeScooterModel = this.onChangeScooterModel.bind(this);\n        this.onChangeScooterStatus = this.onChangeScooterStatus.bind(this);\n        this.onChangePricePerHour = this.onChangePricePerHour.bind(this);\n        this.onChangePassedHours = this.onChangePassedHours.bind(this);\n        this.onChangeRentalPoint = this.onChangeRentalPoint.bind(this);\n        this.getScooterModels = this.getScooterModels.bind(this);\n        this.getRentalPoints = this.getRentalPoints.bind(this);\n        this.addScooter = this.addScooter.bind(this);\n\n        this.state = {\n            id: null,\n            modelId: null,\n            status: \"\",\n            pricePerHour: 0.0,\n            passedHours: 0,\n            scooterRentalPointId: null,\n            scooterModels: [],\n            rentalPoints: [],\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getScooterModels();\n        this.getRentalPoints();\n    }\n\n    getScooterModels() {\n        ScooterModelService.getAll()\n            .then(response => {\n                this.setState({\n                    scooterModels: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    getRentalPoints() {\n        RentalPointService.getAll()\n            .then(response => {\n                this.setState({\n                    rentalPoints: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeScooterModel(e) {\n        this.setState({\n            modelId: e.target.value\n        });\n    }\n\n    onChangeScooterStatus(e) {\n        this.setState({\n            status: e.target.value\n        });\n    }\n\n    onChangePricePerHour(e) {\n        this.setState({\n            pricePerHour: e.target.value\n        });\n    }\n\n    onChangePassedHours(e) {\n        this.setState({\n            passedHours: e.target.value\n        });\n    }\n\n    onChangeRentalPoint(e) {\n        this.setState({\n            scooterRentalPointId: e.target.value\n        });\n    }\n\n    addScooter() {\n        var data = {\n            modelId: this.state.modelId,\n            status: this.state.status,\n            pricePerHour: this.state.pricePerHour,\n            passedHours: this.state.passedHours,\n            scooterRentalPointId: this.state.scooterRentalPointId\n        }\n        console.log(\"hello\")\n        console.log(data)\n        ScooterService.addScooter(data)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The scooter was added successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const {scooterModels, rentalPoints} = this.state;\n\n        return (\n            <div>\n                <div className=\"edit-form\">\n                    <h4>Scooter</h4>\n                    <form>\n                        <div className=\"form-group\">\n                            <label>Scooter model: </label>\n                            <select onChange={this.onChangeScooterModel} id=\"scooterModelSelector\">\n                                <option value=\"Choose model\"/>\n                                {scooterModels &&\n                                scooterModels.map((scooterModel) => (\n                                    <option\n                                        value={scooterModel.id}>{scooterModel.title}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Status:</label>\n                            <select onChange={this.onChangeScooterStatus} id=\"statusSelector\">\n                                <option >Choose status</option>\n                                <option\n                                     value=\"AVAILABLE\">Available\n                                </option>\n                                <option\n                                    value=\"CHARGING\">Charging\n                                </option>\n                                <option\n                                    value=\"BUSY\">Busy\n                                </option>\n                                <option\n                                    value=\"FAULTY\">Faulty\n                                </option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Price per hour: </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                defaultValue={this.state.pricePerHour}\n                                onChange={this.onChangePricePerHour}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Mileage in hours: </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                defaultValue={this.state.passedHours}\n                                onChange={this.onChangePassedHours}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Rental point: </label>\n                            <select onChange={this.onChangeRentalPoint} id=\"rentalPointSelector\">\n                                <option value=\"Choose rental point\"/>\n                                {rentalPoints &&\n                                rentalPoints.map((rentalPoint) => (\n                                    <option\n                                        value={rentalPoint.id}>st. {rentalPoint.street}, {rentalPoint.buildingNumber}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </form>\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block updateButton\"\n                        onClick={this.addScooter}\n                    >\n                        Save\n                    </button>\n                    <p>{this.state.message}</p>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport RentalPointService from \"../../service/rental-point.service\"\nimport CityService from \"../../service/city.service\"\n\nexport default class RentalPointList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveRentalPoints = this.retrieveRentalPoints.bind(this);\n        this.setActiveRentalPoint = this.setActiveRentalPoint.bind(this);\n\n        this.state = {\n            rentalPoints: [],\n            city: [],\n            currentRentalPoint: null,\n            street: \"\",\n            buildingNumber: 0\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveRentalPoints();\n    }\n\n    retrieveRentalPoints() {\n        RentalPointService.getAll()\n            .then(response => {\n                this.setState({\n                    rentalPoints: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveRentalPoint(rentalPoint, index) {\n        CityService.getById(rentalPoint.cityId)\n            .then(response => {\n                this.setState({\n                    city: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        RentalPointService.getById(rentalPoint.id)\n            .then(response => {\n                this.setState({\n                    currentRentalPoint: response.data,\n                    currentIndex: index,\n                    city: this.state.city\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { rentalPoints, currentRentalPoint, currentIndex, city} = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All rental points</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {rentalPoints &&\n                        rentalPoints.map((rentalPoint, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveRentalPoint(rentalPoint, index)}\n                                key={index}\n                            >\n                                st. {rentalPoint.street}, {rentalPoint.buildingNumber}\n                            </li>\n                        ))}\n                    </ul>\n                    <Link\n                        to={\"/add-rental-point\"}\n                        className=\"btn btn-primary btn-block updateButton\"\n                    >\n                        Add rental point\n                    </Link>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentRentalPoint ? (\n                        <div><br/><br/>\n                            <h4>Scooter rental point</h4><br/>\n                            <div>\n                                <strong>Street: </strong>{currentRentalPoint.street}\n                            </div><br/>\n                            <div>\n                                <strong>Building number: </strong>{currentRentalPoint.buildingNumber}\n                            </div><br/>\n                            <div>\n                                <strong>City: </strong>{city==null ? \"\" : city.name}\n                            </div><br/>\n                            <Link\n                                to={\"/scooter-rental-points/\" + currentRentalPoint.id}\n                                className=\"btn btn-primary btn-block editButton\"\n                            >\n                                Edit\n                            </Link>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on rental point</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport RentalPointService from \"../../service/rental-point.service\"\nimport CityService from \"../../service/city.service\"\n\nexport default class ScooterRentalPoint extends Component {\n    constructor(props) {\n        super(props);\n        this.getRentalPoint = this.getRentalPoint.bind(this);\n        this.getCities = this.getCities.bind(this);\n        this.onChangeStreet = this.onChangeStreet.bind(this);\n        this.onChangeBuildingNumber = this.onChangeBuildingNumber.bind(this);\n        this.onChangeCity = this.onChangeCity.bind(this);\n        this.deleteRentalPoint = this.deleteRentalPoint.bind(this);\n        this.updateRentalPoint = this.updateRentalPoint.bind(this);\n\n        this.state = {\n            currentRentalPoint: {\n                id: null,\n                street: \"\",\n                buildingNumber: 0,\n                cityId: null\n            },\n            cities: [],\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getCities();\n        this.getRentalPoint(this.props.match.params.id);\n    }\n\n    getRentalPoint(id) {\n        RentalPointService.getById(id)\n            .then(response => {\n                this.setState({\n                    currentRentalPoint: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    getCities() {\n        CityService.getAll()\n            .then(response => {\n                this.setState({\n                    cities: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeStreet(e) {\n        const newStreet = e.target.value;\n        this.setState(function(prevState) {\n            return {\n                currentRentalPoint: {\n                    ...prevState.currentRentalPoint,\n                    street: newStreet\n                }\n            };\n        });\n    }\n\n    onChangeBuildingNumber(e) {\n        const newBuildingNumber = e.target.value;\n        this.setState(prevState => ({\n            currentRentalPoint: {\n                ...prevState.currentRentalPoint,\n                buildingNumber: newBuildingNumber\n            }\n        }));\n    }\n\n    onChangeCity(e) {\n        const newCity = e.target.value;\n        this.setState(prevState => ({\n            currentRentalPoint: {\n                ...prevState.currentRentalPoint,\n                cityId: newCity\n            }\n        }));\n        console.log(this.state)\n    }\n\n    updateRentalPoint() {\n        console.log(this.state.currentRentalPoint)\n        RentalPointService.update(\n            this.state.currentRentalPoint\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The rental point was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteRentalPoint() {\n        RentalPointService.delete(this.state.currentRentalPoint.id)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The rental point was deleted successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentRentalPoint, cities} = this.state;\n        return (\n            <div>\n                {currentRentalPoint ? (\n                    <div className=\"edit-form\">\n                        <h4>Scooter rental point</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Street: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"description\"\n                                    value={currentRentalPoint.street}\n                                    onChange={this.onChangeStreet}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"passedHours\">Building number: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"passedHours\"\n                                    value={currentRentalPoint.buildingNumber}\n                                    onChange={this.onChangeBuildingNumber}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>City: </label>\n                                <select onChange={this.onChangeCity} id=\"rentalPointSelector\">\n                                    {cities &&\n                                    cities.map((city) => (\n                                        <option selected={currentRentalPoint.cityId === city.id}\n                                                value={city.id}>{city.name}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </form>\n                        <button\n                            className=\"btn btn-primary btn-block deleteButton\"\n                            onClick={this.deleteRentalPoint}\n                        >\n                            Delete\n                        </button>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block updateButton\"\n                            onClick={this.updateRentalPoint}\n                        >\n                            Update\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Please click on a rental point</p>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport CityService from \"../../service/city.service\";\nimport ScooterRentalPointService from \"../../service/rental-point.service\"\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nexport default class RentalPointAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.getCities = this.getCities.bind(this);\n        this.onChangeStreet = this.onChangeStreet.bind(this);\n        this.onChangeBuildingNumber = this.onChangeBuildingNumber.bind(this);\n        this.onChangeCity = this.onChangeCity.bind(this);\n        this.addRentalPoint = this.addRentalPoint.bind(this);\n\n        this.state = {\n            id: null,\n            street: \"\",\n            buildingNumber: 0,\n            cityId: 0.0,\n            cities: [],\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getCities();\n    }\n\n    getCities() {\n        CityService.getAll()\n            .then(response => {\n                this.setState({\n                    cities: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeStreet(e) {\n        this.setState({\n            street: e.target.value\n        });\n    }\n\n    onChangeBuildingNumber(e) {\n        this.setState({\n            buildingNumber: e.target.value\n        });\n    }\n\n    onChangeCity(e) {\n        this.setState({\n            cityId: e.target.value\n        });\n    }\n\n    addRentalPoint() {\n        var data = {\n            street: this.state.street,\n            buildingNumber: this.state.buildingNumber,\n            cityId: this.state.cityId\n        }\n        ScooterRentalPointService.addScooterRentalPoint(data)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The rental point was added successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const {cities} = this.state;\n\n        return (\n            <div>\n                <div className=\"edit-form\">\n                    <h4>Scooter rental point</h4>\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Street: </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                defaultValue={this.state.street}\n                                onChange={this.onChangeStreet}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Building number: </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                defaultValue={this.state.buildingNumber}\n                                onChange={this.onChangeBuildingNumber}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>City: </label>\n                            <select required={true} onChange={this.onChangeCity} id=\"rentalPointSelector\">\n                                <option hidden=\"\" disabled=\"disabled\" selected=\"selected\" value=\"\">Please select city</option>\n                                {cities &&\n                                cities.map((city) => (\n                                    <option\n                                        value={city.id}>{city.name}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </form>\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block updateButton\"\n                        onClick={this.addRentalPoint}\n                    >\n                        Save\n                    </button>\n                    <p>{this.state.message}</p>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ScooterModelService from \"../../service/scooter-model.service\"\n\nexport default class RentalPointList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveScooterModels = this.retrieveScooterModels.bind(this);\n        this.setActiveScooterModel = this.setActiveScooterModel.bind(this);\n\n        this.state = {\n            scooterModels: [],\n            currentScooterModel: null,\n            currentIndex: -1\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveScooterModels();\n    }\n\n    retrieveScooterModels() {\n        ScooterModelService.getAll()\n            .then(response => {\n                this.setState({\n                    scooterModels: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveScooterModel(scooterModel, index) {\n        ScooterModelService.getById(scooterModel.id)\n            .then(response => {\n                this.setState({\n                    currentScooterModel: response.data,\n                    currentIndex: index\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { scooterModels, currentScooterModel, currentIndex} = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All scooter models</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {scooterModels &&\n                        scooterModels.map((scooterModel, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveScooterModel(scooterModel, index)}\n                                key={index}\n                            >\n                                {scooterModel.title}\n                            </li>\n                        ))}\n                    </ul>\n                    <Link\n                        to={\"/add-scooter-model\"}\n                        className=\"btn btn-primary btn-block updateButton\"\n                    >\n                        Add model\n                    </Link>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentScooterModel ? (\n                        <div><br/><br/>\n                            <h4>Scooter model</h4><br/>\n                            <div>\n                                <strong>Title: </strong>{currentScooterModel.title}\n                            </div><br/>\n                            <Link\n                                to={\"/scooter-models/\" + currentScooterModel.id}\n                                className=\"btn btn-primary btn-block editButton\"\n                            >\n                                Edit\n                            </Link>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on scooter model</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport ScooterModelService from \"../../service/scooter-model.service\"\n\nexport default class ScooterModelAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.addScooterModel = this.addScooterModel.bind(this);\n\n        this.state = {\n            id: null,\n            title: \"\",\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    addScooterModel() {\n        var data = {\n            title: this.state.title\n        }\n        ScooterModelService.addModel(data)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The model was added successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"edit-form\">\n                    <h4>Scooter model</h4>\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Title: </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                defaultValue={this.state.title}\n                                onChange={this.onChangeTitle}\n                            />\n                        </div>\n                    </form>\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block updateButton\"\n                        onClick={this.addScooterModel}\n                    >\n                        Save\n                    </button>\n                    <p>{this.state.message}</p>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport ScooterModelService from \"../../service/scooter-model.service\"\n\nexport default class ScooterModel extends Component {\n    constructor(props) {\n        super(props);\n        this.getScooterModel = this.getScooterModel.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.updateScooterModel = this.updateScooterModel.bind(this);\n        this.deleteScooterModel = this.deleteScooterModel.bind(this);\n\n        this.state = {\n            currentScooterModel: {\n                id: null,\n                title: \"\"\n            },\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getScooterModel(this.props.match.params.id);\n    }\n\n    getScooterModel(id) {\n        ScooterModelService.getById(id)\n            .then(response => {\n                this.setState({\n                    currentScooterModel: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeTitle(e) {\n        const newTitle = e.target.value;\n        this.setState(function(prevState) {\n            return {\n                currentScooterModel: {\n                    ...prevState.currentScooterModel,\n                    title: newTitle\n                }\n            };\n        });\n    }\n\n    updateScooterModel() {\n        ScooterModelService.update(\n            this.state.currentScooterModel\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The model was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteScooterModel() {\n        ScooterModelService.delete(this.state.currentScooterModel.id)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The model was deleted successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentScooterModel} = this.state;\n        return (\n            <div>\n                {currentScooterModel ? (\n                    <div className=\"edit-form\">\n                        <h4>Scooter model</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Title: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"description\"\n                                    value={currentScooterModel.title}\n                                    onChange={this.onChangeTitle}\n                                />\n                            </div>\n                        </form>\n                        <button\n                            className=\"btn btn-primary btn-block deleteButton\"\n                            onClick={this.deleteScooterModel}\n                        >\n                            Delete\n                        </button>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block updateButton\"\n                            onClick={this.updateScooterModel}\n                        >\n                            Update\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Please click on a scooter model</p>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport CityService from \"../../service/city.service\"\n\nexport default class CityAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.addCity = this.addCity.bind(this);\n\n        this.state = {\n            id: null,\n            name: \"\",\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    addCity() {\n        var data = {\n            name: this.state.name\n        }\n        CityService.addCity(data)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The city was added successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n                this.setState({\n                    message: \"You don't have enough permissions!\"\n                });\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"edit-form\">\n                    <h4>City</h4>\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Name: </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                defaultValue={this.state.name}\n                                onChange={this.onChangeName}\n                            />\n                        </div>\n                    </form>\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block updateButton\"\n                        onClick={this.addCity}\n                    >\n                        Save\n                    </button><br/>\n                    {this.state.message !== \"\" ? (\n                        <div className=\"errorDiv\">\n                            <strong>{this.state.message}</strong>\n                        </div>\n                    ) : <div></div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport CityService from \"../../service/city.service\"\n\nexport default class City extends Component {\n    constructor(props) {\n        super(props);\n        this.getCity = this.getCity.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.updateCity = this.updateCity.bind(this);\n        this.deleteCity = this.deleteCity.bind(this);\n\n        this.state = {\n            currentCity: {\n                id: null,\n                name: \"\"\n            },\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getCity(this.props.match.params.id);\n    }\n\n    getCity(id) {\n        CityService.getById(id)\n            .then(response => {\n                this.setState({\n                    currentCity: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeName(e) {\n        const newName = e.target.value;\n        this.setState(function(prevState) {\n            return {\n                currentCity: {\n                    ...prevState.currentCity,\n                    name: newName\n                }\n            };\n        });\n    }\n\n    updateCity() {\n        CityService.update(\n            this.state.currentCity\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The city was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteCity() {\n        CityService.delete(this.state.currentCity.id)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The city was deleted successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentCity } = this.state;\n        return (\n            <div>\n                {currentCity ? (\n                    <div className=\"edit-form\">\n                        <h4>City</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Name: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"description\"\n                                    value={currentCity.name}\n                                    onChange={this.onChangeName}\n                                />\n                            </div>\n                        </form>\n                        <button\n                            className=\"btn btn-primary btn-block deleteButton\"\n                            onClick={this.deleteCity}\n                        >\n                            Delete\n                        </button>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block updateButton\"\n                            onClick={this.updateCity}\n                        >\n                            Update\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Please click on a city</p>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","import http from \"../http.common\"\nimport authHeader from \"./auth-header\";\n\nclass SubscriptionService {\n\n    addSubscription(data) {\n        return http.post(\"/manager/subscription\", data, { headers: authHeader() });\n    }\n\n    getAll() {\n        return http.get(\"/manager/subscriptions\", { headers: authHeader() })\n    }\n\n    getById(id) {\n        return http.get(`/user/subscriptions/${id}`, { headers: authHeader() })\n    }\n\n    update(data) {\n        return http.put(\"/manager/subscription\", data, { headers: authHeader() });\n    }\n\n    delete(id) {\n        return http.delete(`/manager/subscription/${id}`, { headers: authHeader() })\n    }\n\n    getAllSubscriptionsByUser(id) {\n        return http.get(`/user/user-subscriptions/${id}`, { headers: authHeader() })\n    }\n}\n\nexport default new SubscriptionService();","import http from \"../http.common\"\nimport authHeader from \"./auth-header\";\n\nclass UserService {\n\n    getAll() {\n        return http.get(\"/manager/users\", { headers: authHeader() })\n    }\n\n    getById(id) {\n        return http.get(`/user/users/${id}`, { headers: authHeader() })\n    }\n\n    updateWithoutRole(data) {\n        return http.put(\"/user/user\", data, { headers: authHeader() });\n    }\n\n    updateWithRole(data) {\n        return http.put(\"/admin/user\", data, { headers: authHeader() });\n    }\n\n    delete(id) {\n        return http.delete(`/admin/user/${id}`, { headers: authHeader() })\n    }\n}\n\nexport default new UserService();","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport SubscriptionService from \"../../service/subscription.service\"\nimport UserService from \"../../service/user.service\"\n\nexport default class SubscriptionList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveSubscriptions = this.retrieveSubscriptions.bind(this);\n        this.setActiveSubscription = this.setActiveSubscription.bind(this);\n\n        this.state = {\n            subscriptions: [],\n            currentSubscription: null,\n            currentIndex: -1,\n            user: null\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveSubscriptions();\n    }\n\n    retrieveSubscriptions() {\n        SubscriptionService.getAll()\n            .then(response => {\n                this.setState({\n                    subscriptions: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveSubscription(subscription, index) {\n        UserService.getById(subscription.userId)\n            .then(response => {\n                this.setState({\n                    user: response.data,\n                    currentSubscription: subscription,\n                    currentIndex: index\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { subscriptions, currentSubscription, currentIndex, user} = this.state;\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All subscriptions</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {subscriptions &&\n                        subscriptions.map((subscription, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveSubscription(subscription, index)}\n                                key={index}\n                            >\n                                <strong>{subscription.status}</strong> - Discount: {subscription.discountPercentage}%\n                            </li>\n                        ))}\n                    </ul>\n                    <Link\n                        to={\"/add-subscription\"}\n                        className=\"btn btn-primary btn-block updateButton\"\n                    >\n                        Add subscription\n                    </Link>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentSubscription ? (\n                        <div><br/><br/>\n                            <h4>Subscription</h4><br/>\n                            <div>\n                                <strong>User: </strong>{user==null ? \"\" : user.email}\n                            </div><br/>\n                            <div>\n                                <strong>Price: </strong>{currentSubscription.price} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Balance: </strong>{currentSubscription.balance} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Discount: </strong>{currentSubscription.discountPercentage}%\n                            </div><br/>\n                            <div>\n                                <strong>Status: </strong>{currentSubscription.status}\n                            </div><br/>\n                            <Link\n                                to={\"/subscriptions/\" + currentSubscription.id}\n                                className=\"btn btn-primary btn-block editButton\"\n                            >\n                                Edit\n                            </Link>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on subscription</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport UserService from \"../../service/user.service\"\nimport SubscriptionService from \"../../service/subscription.service\"\n\nexport default class SubscriptionAdd extends Component {\n    constructor(props) {\n        super(props);\n        this.getUsers = this.getUsers.bind(this);\n        this.onChangeUser = this.onChangeUser.bind(this);\n        this.onChangePrice = this.onChangePrice.bind(this);\n        this.onChangeBalance = this.onChangeBalance.bind(this);\n        this.onChangeDiscountPercentage = this.onChangeDiscountPercentage.bind(this);\n        this.addSubscription = this.addSubscription.bind(this);\n\n        this.state = {\n            id: null,\n            userId: null,\n            price: 0.0,\n            balance: 0.0,\n            discountPercentage: 0.0,\n            users: [],\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getUsers();\n    }\n\n    getUsers() {\n        UserService.getAll()\n            .then(response => {\n                this.setState({\n                    users: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeUser(e) {\n        this.setState({\n            userId: e.target.value\n        });\n    }\n\n    onChangePrice(e) {\n        this.setState({\n            price: e.target.value\n        });\n    }\n\n    onChangeBalance(e) {\n        this.setState({\n            balance: e.target.value\n        });\n    }\n\n    onChangeDiscountPercentage(e) {\n        this.setState({\n            discountPercentage: e.target.value\n        });\n    }\n\n    addSubscription() {\n        var data = {\n            userId: this.state.userId,\n            price: this.state.price,\n            balance: this.state.balance,\n            discountPercentage: this.state.discountPercentage,\n            status: this.state.status\n        }\n\n        SubscriptionService.addSubscription(data)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The subscription was added successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const {users} = this.state;\n\n        return (\n            <div>\n                <div className=\"edit-form\">\n                    <h4>Subscription</h4>\n                    <form>\n                        <div className=\"form-group\">\n                            <label>User: </label>\n                            <select onChange={this.onChangeUser} id=\"scooterModelSelector\">\n                                <option value=\"Choose model\"/>\n                                {users &&\n                                users.map((user) => (\n                                    <option\n                                        value={user.id}>{user.email}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Price: </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                defaultValue={this.state.price}\n                                onChange={this.onChangePrice}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Balance: </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                defaultValue={this.state.balance}\n                                onChange={this.onChangeBalance}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Discount: </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                defaultValue={this.state.discountPercentage}\n                                onChange={this.onChangeDiscountPercentage}\n                            />\n                        </div>\n                    </form>\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block updateButton\"\n                        onClick={this.addSubscription}\n                    >\n                        Save\n                    </button>\n                    <p>{this.state.message}</p>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport SubscriptionService from \"../../service/subscription.service\"\nimport UserService from \"../../service/user.service\";\n\n\nexport default class Subscription extends Component {\n    constructor(props) {\n        super(props);\n        this.getSubscription = this.getSubscription.bind(this);\n        this.getUsers = this.getUsers.bind(this);\n        this.onChangeUser = this.onChangeUser.bind(this);\n        this.onChangePrice = this.onChangePrice.bind(this);\n        this.onChangeBalance = this.onChangeBalance.bind(this);\n        this.onChangeDiscountPercentage = this.onChangeBalance.bind(this);\n        this.updateSubscription = this.updateSubscription.bind(this);\n        this.deleteSubscription = this.deleteSubscription.bind(this);\n\n        this.state = {\n            currentSubscription: {\n                id: null,\n                userId: null,\n                price: 0.0,\n                balance: 0.0,\n                discountPercentage: 0.0,\n            },\n            users: [],\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getUsers();\n        this.getSubscription(this.props.match.params.id);\n    }\n\n    getSubscription(id) {\n        SubscriptionService.getById(id)\n            .then(response => {\n                this.setState({\n                    currentSubscription: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    getUsers() {\n        UserService.getAll()\n            .then(response => {\n                this.setState({\n                    users: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeUser(e) {\n        const newUser = e.target.value;\n        this.setState(function(prevState) {\n            return {\n                currentSubscription: {\n                    ...prevState.currentSubscription,\n                    userId: newUser\n                }\n            };\n        });\n    }\n\n    onChangePrice(e) {\n        const newPrice = e.target.value;\n        this.setState(prevState => ({\n            currentSubscription: {\n                ...prevState.currentSubscription,\n                price: newPrice\n            }\n        }));\n        console.log(this.state)\n    }\n\n    onChangeBalance(e) {\n        const newBalance = e.target.value;\n        this.setState(prevState => ({\n            currentSubscription: {\n                ...prevState.currentSubscription,\n                balance: newBalance\n            }\n        }));\n    }\n\n    onChangeDiscountPercentage(e) {\n        const newDiscountPercentage = e.target.value;\n\n        this.setState(prevState => ({\n            currentSubscription: {\n                ...prevState.currentSubscription,\n                discountPercentage: newDiscountPercentage\n            }\n        }));\n    }\n\n    updateSubscription() {\n        SubscriptionService.update(\n            this.state.currentSubscription\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The subscription was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteSubscription() {\n        SubscriptionService.delete(this.state.currentSubscription.id)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The subscription was deleted successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentSubscription, users} = this.state;\n        return (\n            <div>\n                {currentSubscription ? (\n                    <div className=\"edit-form\">\n                        <h4>Subscription</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label>User: </label>\n                                <select onChange={this.onChangeUser} id=\"scooterModelSelector\">\n                                    {users &&\n                                    users.map((user) => (\n                                        <option selected={currentSubscription.userId === user.id}\n                                                value={user.id}>{user.email}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Price: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"description\"\n                                    value={currentSubscription.price}\n                                    onChange={this.onChangePrice}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"passedHours\">Balance: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"passedHours\"\n                                    value={currentSubscription.balance}\n                                    onChange={this.onChangeBalance}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"passedHours\">Discount: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"passedHours\"\n                                    value={currentSubscription.discountPercentage}\n                                    onChange={this.onChangeDiscountPercentage}\n                                />\n                            </div>\n                        </form>\n                        <button\n                            className=\"btn btn-primary btn-block deleteButton\"\n                            onClick={this.deleteSubscription}\n                        >\n                            Delete\n                        </button>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block updateButton\"\n                            onClick={this.updateSubscription}\n                        >\n                            Update\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Please click on a subscription...</p>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","import http from \"../http.common\"\nimport authHeader from \"./auth-header\";\n\nclass RoleService {\n\n    getAll() {\n        return http.get(\"/admin/roles\", { headers: authHeader() })\n    }\n\n    getById(id) {\n        return http.get(`/admin/roles/${id}`, { headers: authHeader() })\n    }\n}\n\nexport default new RoleService();","import React, {Component} from \"react\";\nimport UserService from \"../../service/user.service\";\nimport RoleService from \"../../service/role.service\";\n\n\nexport default class User extends Component {\n    constructor(props) {\n        super(props);\n        this.getUser = this.getUser.bind(this);\n        this.getRoles = this.getRoles.bind(this);\n        this.onChangeRole = this.onChangeRole.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeSurname = this.onChangeSurname.bind(this);\n        this.onChangeAge = this.onChangeAge.bind(this);\n        this.updateUser = this.updateUser.bind(this);\n        this.deleteUser = this.deleteUser.bind(this);\n\n        this.state = {\n            currentUser: {\n                id: null,\n                roleId: null,\n                email: \"\",\n                name: \"\",\n                surname: \"\",\n                age: 0.0\n            },\n            roles: [],\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getRoles();\n        this.getUser(this.props.match.params.id);\n    }\n\n    getUser(id) {\n        UserService.getById(id)\n            .then(response => {\n                this.setState({\n                    currentUser: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    getRoles() {\n        RoleService.getAll()\n            .then(response => {\n                this.setState({\n                    roles: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeRole(e) {\n        const newRole = e.target.value;\n        this.setState(function(prevState) {\n            return {\n                currentUser: {\n                    ...prevState.currentUser,\n                    roleId: newRole\n                }\n            };\n        });\n    }\n\n    onChangeEmail(e) {\n        const newEmail = e.target.value;\n        this.setState(prevState => ({\n            currentUser: {\n                ...prevState.currentUser,\n                email: newEmail\n            }\n        }));\n        console.log(this.state)\n    }\n\n    onChangeName(e) {\n        const newName = e.target.value;\n        this.setState(prevState => ({\n            currentUser: {\n                ...prevState.currentUser,\n                name: newName\n            }\n        }));\n    }\n\n    onChangeSurname(e) {\n        const newSurname = e.target.value;\n\n        this.setState(prevState => ({\n            currentUser: {\n                ...prevState.currentUser,\n                surname: newSurname\n            }\n        }));\n    }\n\n    onChangeAge(e) {\n        const newAge = e.target.value;\n\n        this.setState(prevState => ({\n            currentUser: {\n                ...prevState.currentUser,\n                age: newAge\n            }\n        }));\n    }\n\n    updateUser() {\n        UserService.updateWithRole(\n            this.state.currentUser\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The user was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteUser() {\n        UserService.delete(this.state.currentUser.id)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The user was deleted successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentUser, roles} = this.state;\n        return (\n            <div>\n                {currentUser ? (\n                    <div className=\"edit-form\">\n                        <h4>User</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label>Role: </label>\n                                <select onChange={this.onChangeRole} id=\"scooterModelSelector\">\n                                    {roles &&\n                                    roles.map((role) => (\n                                        <option selected={currentUser.roleId === role.id}\n                                                value={role.id}>{role.name}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Email: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"description\"\n                                    value={currentUser.email}\n                                    onChange={this.onChangeEmail}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"passedHours\">Name: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"passedHours\"\n                                    value={currentUser.name}\n                                    onChange={this.onChangeName}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"passedHours\">Surname: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"passedHours\"\n                                    value={currentUser.surname}\n                                    onChange={this.onChangeSurname}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"passedHours\">Age: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"passedHours\"\n                                    value={currentUser.age}\n                                    onChange={this.onChangeAge}\n                                />\n                            </div>\n                        </form>\n                        <button\n                            className=\"btn btn-primary btn-block deleteButton\"\n                            onClick={this.deleteUser}\n                        >\n                            Delete\n                        </button>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block updateButton\"\n                            onClick={this.updateUser}\n                        >\n                            Update\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Please click on a user...</p>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport UserService from \"../../service/user.service\"\nimport RoleService from \"../../service/role.service\"\n\nexport default class SubscriptionList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveUsers = this.retrieveUsers.bind(this);\n        this.setActiveUser = this.setActiveUser.bind(this);\n\n        this.state = {\n            users: [],\n            currentUser: null,\n            currentIndex: -1,\n            role: null\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveUsers();\n    }\n\n    retrieveUsers() {\n        UserService.getAll()\n            .then(response => {\n                this.setState({\n                    users: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveUser(user, index) {\n        RoleService.getById(user.roleId)\n            .then(response => {\n                this.setState({\n                    role: response.data,\n                    currentUser: user,\n                    currentIndex: index\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { users, currentUser, currentIndex, role} = this.state;\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All users</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {users &&\n                        users.map((user, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveUser(user, index)}\n                                key={index}\n                            >\n                                {user.email}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentUser ? (\n                        <div><br/><br/>\n                            <h4>User</h4><br/>\n                            <div>\n                                <strong>Role: </strong>{role==null ? \"\" : role.name}\n                            </div><br/>\n                            <div>\n                                <strong>Email: </strong>{currentUser.email}\n                            </div><br/>\n                            <div>\n                                <strong>Name: </strong>{currentUser.name}\n                            </div><br/>\n                            <div>\n                                <strong>Surname: </strong>{currentUser.surname}\n                            </div><br/>\n                            <div>\n                                <strong>Age: </strong>{currentUser.age}\n                            </div><br/>\n                            <Link\n                                to={\"/users/\" + currentUser.id}\n                                className=\"btn btn-primary btn-block editButton\"\n                            >\n                                Edit\n                            </Link>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on user</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport SubscriptionService from \"../../service/subscription.service\"\n\nexport default class UserSubscriptionList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveSubscriptions = this.retrieveSubscriptions.bind(this);\n        this.setActiveSubscription = this.setActiveSubscription.bind(this);\n\n        this.state = {\n            subscriptions: [],\n            currentSubscription: null,\n            currentIndex: -1,\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveSubscriptions();\n    }\n\n    retrieveSubscriptions() {\n        SubscriptionService.getAllSubscriptionsByUser(this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    subscriptions: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveSubscription(subscription, index) {\n        SubscriptionService.getById(subscription.id)\n            .then(response => {\n                this.setState({\n                    currentSubscription: response.data,\n                    currentIndex: index\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { subscriptions, currentSubscription, currentIndex } = this.state;\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All subscriptions</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {subscriptions &&\n                        subscriptions.map((subscription, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveSubscription(subscription, index)}\n                                key={index}\n                            >\n                                <strong>{subscription.status}</strong> - Discount: {subscription.discountPercentage}%\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentSubscription ? (\n                        <div><br/><br/>\n                            <h4>Subscription</h4><br/>\n                            <div>\n                                <strong>Price: </strong>{currentSubscription.price} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Balance: </strong>{currentSubscription.balance} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Discount: </strong>{currentSubscription.discountPercentage}%\n                            </div><br/>\n                            <div>\n                                <strong>Status: </strong>{currentSubscription.status}\n                            </div><br/>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on subscription</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import http from \"../http.common\"\nimport authHeader from \"./auth-header\";\n\nclass RideService {\n\n    getAll() {\n        return http.get(\"/manager/ride-sessions\", { headers: authHeader() })\n    }\n\n    orderRide(data) {\n        return http.post(\"/user/order-ride\", data, { headers: authHeader() })\n    }\n\n    getAllByUser(id) {\n        return http.get(`/user/ride-sessions/${id}`, { headers: authHeader() });\n    }\n\n    getAllByScooterId(id) {\n        return http.get(`/manager/scooter/ride-sessions/${id}`, { headers: authHeader() });\n    }\n}\n\nexport default new RideService();","import React, { Component } from \"react\";\nimport ScooterService from \"../../service/scooter.service\"\nimport RentalPointService from \"../../service/rental-point.service\"\nimport RideService from \"../../service/ride.service\"\nimport CityService from \"../../service/city.service\"\nimport ScooterRentalPointService from \"../../service/rental-point.service\"\nimport {waitFor} from \"@testing-library/react\";\n\nexport default class OrderRide extends Component {\n    constructor(props) {\n        super(props);\n        this.getCities = this.getCities.bind(this);\n        this.onChangeScooter = this.onChangeScooter.bind(this);\n        this.onChangeRentalPoint = this.onChangeRentalPoint.bind(this);\n        this.onChangeReturnRentalPoint = this.onChangeReturnRentalPoint.bind(this);\n        this.onChangeRideHours = this.onChangeRideHours.bind(this);\n        this.onChangeCity = this.onChangeCity.bind(this);\n        this.orderRide = this.orderRide.bind(this);\n        this.onChangeScooter = this.onChangeScooter.bind(this);\n\n        this.state = {\n            cities: [],\n            rentalPoints: [],\n            scooterId: null,\n            returnScooterRentalPointId: null,\n            userId: null,\n            scooters: [],\n            rideHours: 0,\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getCities();\n    }\n\n    getCities() {\n        CityService.getAll()\n            .then(response => {\n                this.setState({\n                    cities: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeRentalPoint(e) {\n        ScooterService.getAllAvailableScootersByRentalPointId(e.target.value)\n            .then(response => {\n                this.setState({\n                    scooters: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeCity(e) {\n        RentalPointService.getAllByCity(e.target.value)\n            .then(response => {\n                this.setState({\n                    rentalPoints: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeScooter(e) {\n        this.setState({\n            scooterId: e.target.value\n        });\n    }\n\n    onChangeReturnRentalPoint(e) {\n        this.setState({\n            returnScooterRentalPointId: e.target.value\n        });\n    }\n\n    onChangeRideHours(e) {\n        this.setState({\n            rideHours: e.target.value\n        });\n    }\n\n    orderRide() {\n        var data = {\n            userId: this.props.match.params.id,\n            scooterId: this.state.scooterId,\n            returnScooterRentalPointId: this.state.returnScooterRentalPointId,\n            rideHours: this.state.rideHours\n        }\n\n        RideService.orderRide(data)\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The ride was ordered successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const {cities, rentalPoints, scooters} = this.state;\n\n        return (\n            <div>\n                <div className=\"edit-form\">\n                    <h4>Order ride</h4>\n                    <form>\n                        <div className=\"form-group\">\n                            <label>City: </label>\n                            <select onChange={this.onChangeCity} id=\"scooterModelSelector\">\n                                <option value=\"Choose model\"/>\n                                {cities &&\n                                cities.map((city) => (\n                                    <option\n                                        value={city.id}>{city.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Rental point: </label>\n                            <select onChange={this.onChangeRentalPoint} id=\"scooterModelSelector\">\n                                <option value=\"Choose model\"/>\n                                {rentalPoints &&\n                                rentalPoints.map((rentalPoint) => (\n                                    <option\n                                        value={rentalPoint.id}>st.{rentalPoint.street}, {rentalPoint.buildingNumber}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Scooter: </label>\n                            <select onChange={this.onChangeScooter} id=\"scooterModelSelector\">\n                                <option value=\"Choose model\"/>\n                                {scooters &&\n                                scooters.map((scooter) => (\n                                    <option\n                                        value={scooter.id}>{scooter.status} - Price per hour: {scooter.pricePerHour} BYN; Mileage: {scooter.passedHours} hours\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Return rental point: </label>\n                            <select onChange={this.onChangeReturnRentalPoint} id=\"scooterModelSelector\">\n                                <option value=\"Choose model\"/>\n                                {rentalPoints &&\n                                rentalPoints.map((rentalPoint) => (\n                                    <option\n                                        value={rentalPoint.id}>st.{rentalPoint.street}, {rentalPoint.buildingNumber}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Amount of hours: </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                defaultValue={this.state.rideHours}\n                                onChange={this.onChangeRideHours}\n                            />\n                        </div>\n                    </form>\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block updateButton\"\n                        onClick={this.orderRide}\n                    >\n                        Order\n                    </button>\n                    <p>{this.state.message}</p>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport ScooterService from \"../../service/scooter.service\"\nimport RideService from \"../../service/ride.service\"\nimport RentalPointService from \"../../service/rental-point.service\"\nimport UserService from \"../../service/user.service\"\n\nexport default class RideList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveRideSessions = this.retrieveRideSessions.bind(this);\n        this.setActiveRideSession = this.setActiveRideSession.bind(this);\n\n        this.state = {\n            rideSessions: [],\n            currentRideSession: null,\n            currentIndex: -1,\n            user: null,\n            scooter: null\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveRideSessions();\n    }\n\n    retrieveRideSessions() {\n        RideService.getAll()\n            .then(response => {\n                this.setState({\n                    rideSessions: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveRideSession(rideSession, index) {\n        ScooterService.getScooter(rideSession.scooterId)\n            .then(response => {\n                this.setState({\n                    scooter: response.data,\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        UserService.getById(rideSession.userId)\n            .then(response => {\n                this.setState({\n                    user: response.data,\n                    currentRideSession: rideSession,\n                    currentIndex: index,\n                    scooter: this.state.scooter,\n                    returnRentalPoint: this.state.returnRentalPoint\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { rideSessions, scooter, currentRideSession, currentIndex, user} = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All ride sessions</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {rideSessions &&\n                        rideSessions.map((rideSession, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveRideSession(rideSession, index)}\n                                key={index}\n                            >\n                                Order date: {rideSession.createdOn.substring(0, rideSession.createdOn.indexOf(\"T\"))}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentRideSession ? (\n                        <div><br/><br/>\n                            <h4>Ride session</h4><br/>\n                            <div>\n                                <strong>User: </strong>{user==null ? \"\" : user.email}\n                            </div><br/>\n                            <div>\n                                <strong>Scooter price per hour: </strong>{scooter==null ? \"\" : scooter.pricePerHour} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Price for ride: </strong>{currentRideSession.price} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Ride hours: </strong>{currentRideSession.rideHours} hours\n                            </div><br/>\n                            <div>\n                                <strong>Order date: </strong>{currentRideSession.createdOn.substring(0, currentRideSession.createdOn.indexOf(\"T\")) + \" \" + currentRideSession.createdOn.substring(11, 19)}\n                            </div><br/>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on ride session</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport ScooterService from \"../../service/scooter.service\"\nimport RideService from \"../../service/ride.service\"\nimport UserService from \"../../service/user.service\"\n\n\nexport default class UserRideList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveRideSessions = this.retrieveRideSessions.bind(this);\n        this.setActiveRideSession = this.setActiveRideSession.bind(this);\n\n        this.state = {\n            rideSessions: [],\n            currentRideSession: null,\n            currentIndex: -1,\n            scooter: null\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveRideSessions();\n    }\n\n    retrieveRideSessions() {\n        RideService.getAllByUser(this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    rideSessions: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveRideSession(rideSession, index) {\n        ScooterService.getScooter(rideSession.scooterId)\n            .then(response => {\n                this.setState({\n                    scooter: response.data,\n                    currentRideSession: rideSession,\n                    currentIndex: index,\n                    returnRentalPoint: this.state.returnRentalPoint\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { rideSessions, scooter, currentRideSession, currentIndex, user} = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All ride sessions</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {rideSessions &&\n                        rideSessions.map((rideSession, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveRideSession(rideSession, index)}\n                                key={index}\n                            >\n                                Order date: {rideSession.createdOn.substring(0, rideSession.createdOn.indexOf(\"T\"))}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentRideSession ? (\n                        <div><br/><br/>\n                            <h4>Ride session</h4><br/>\n                            <div>\n                                <strong>Scooter price per hour: </strong>{scooter==null ? \"\" : scooter.pricePerHour} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Price for ride: </strong>{currentRideSession.price} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Ride hours: </strong>{currentRideSession.rideHours} hours\n                            </div><br/>\n                            <div>\n                                <strong>Order date: </strong>{currentRideSession.createdOn.substring(0, currentRideSession.createdOn.indexOf(\"T\")) + \" \" + currentRideSession.createdOn.substring(11, 19)}\n                            </div><br/>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on ride session</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport UserService from \"../../service/user.service\";\n\n\nexport default class UpdateUserProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.getUser = this.getUser.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeSurname = this.onChangeSurname.bind(this);\n        this.onChangeAge = this.onChangeAge.bind(this);\n        this.updateUser = this.updateUser.bind(this);\n\n        this.state = {\n            currentUser: {\n                id: null,\n                email: \"\",\n                name: \"\",\n                surname: \"\",\n                age: 0.0\n            },\n            roles: [],\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getUser(this.props.match.params.id);\n    }\n\n    getUser(id) {\n        UserService.getById(id)\n            .then(response => {\n                this.setState({\n                    currentUser: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    onChangeEmail(e) {\n        const newEmail = e.target.value;\n        this.setState(prevState => ({\n            currentUser: {\n                ...prevState.currentUser,\n                email: newEmail\n            }\n        }));\n        console.log(this.state)\n    }\n\n    onChangeName(e) {\n        const newName = e.target.value;\n        this.setState(prevState => ({\n            currentUser: {\n                ...prevState.currentUser,\n                name: newName\n            }\n        }));\n    }\n\n    onChangeSurname(e) {\n        const newSurname = e.target.value;\n\n        this.setState(prevState => ({\n            currentUser: {\n                ...prevState.currentUser,\n                surname: newSurname\n            }\n        }));\n    }\n\n    onChangeAge(e) {\n        const newAge = e.target.value;\n\n        this.setState(prevState => ({\n            currentUser: {\n                ...prevState.currentUser,\n                age: newAge\n            }\n        }));\n    }\n\n    updateUser() {\n        UserService.updateWithoutRole(\n            this.state.currentUser\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The user was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentUser} = this.state;\n        return (\n            <div>\n                {currentUser ? (\n                    <div className=\"edit-form\">\n                        <h4>User</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Email: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"description\"\n                                    value={currentUser.email}\n                                    onChange={this.onChangeEmail}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"passedHours\">Name: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"passedHours\"\n                                    value={currentUser.name}\n                                    onChange={this.onChangeName}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"passedHours\">Surname: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"passedHours\"\n                                    value={currentUser.surname}\n                                    onChange={this.onChangeSurname}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"passedHours\">Age: </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"passedHours\"\n                                    value={currentUser.age}\n                                    onChange={this.onChangeAge}\n                                />\n                            </div>\n                        </form>\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary btn-block updateButton\"\n                            onClick={this.updateUser}\n                        >\n                            Update\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Please click on a user...</p>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport ScooterService from \"../../service/scooter.service\"\nimport ScooterModelService from \"../../service/scooter-model.service\"\nimport RentalPointService from \"../../service/rental-point.service\"\n\nexport default class UserScooterList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveScooters = this.retrieveScooters.bind(this);\n        this.setActiveScooter = this.setActiveScooter.bind(this);\n\n        this.state = {\n            scooters: [],\n            currentScooter: null,\n            currentIndex: -1,\n            rentalPoint: null,\n            scooterModel: null\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveScooters(this.props.match.params.id);\n    }\n\n    retrieveScooters(id) {\n        ScooterService.getAllByRentalPoint(id)\n            .then(response => {\n                this.setState({\n                    scooters: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveScooter(scooter, index) {\n        ScooterModelService.getById(scooter.modelId)\n            .then(response => {\n                this.setState({\n                    scooterModel: response.data,\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        RentalPointService.getById(scooter.scooterRentalPointId)\n            .then(response => {\n                this.setState({\n                    rentalPoint: response.data,\n                    currentScooter: scooter,\n                    currentIndex: index,\n                    scooterModel: this.state.scooterModel,\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { scooters, currentScooter, currentIndex, rentalPoint, scooterModel} = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All scooters</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {scooters &&\n                        scooters.map((scooter, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveScooter(scooter, index)}\n                                key={index}\n                            >\n                                Price: {scooter.pricePerHour} BYN <strong>- {scooter.status}</strong>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"col-md-6\">\n                    <p>Amount of scooters: {scooters.length}</p>\n                    {currentScooter ? (\n                        <div><br/><br/>\n                            <h4>Scooter</h4><br/>\n                            <div>\n                                <strong>Model: </strong>{scooterModel==null ? \"\" : scooterModel.title}\n                            </div><br/>\n                            <div>\n                                <strong>Status: </strong>{currentScooter.status}\n                            </div><br/>\n                            <div>\n                                <strong>Price per hour: </strong>{currentScooter.pricePerHour} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Mileage: </strong>{currentScooter.passedHours} hours\n                            </div><br/>\n                            <div>\n                                <strong>Rental point: </strong>st. {rentalPoint.street}, {rentalPoint.buildingNumber}\n                            </div><br/>\n                        </div>\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on scooter</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport RentalPointService from \"../../service/rental-point.service\"\nimport CityService from \"../../service/city.service\"\n\nexport default class UserRentalPointList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveRentalPoints = this.retrieveRentalPoints.bind(this);\n        this.setActiveRentalPoint = this.setActiveRentalPoint.bind(this);\n\n        this.state = {\n            rentalPoints: [],\n            city: [],\n            currentRentalPoint: null,\n            street: \"\",\n            buildingNumber: 0\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveRentalPoints(this.props.match.params.id);\n    }\n\n    retrieveRentalPoints(id) {\n        RentalPointService.getAllByCity(id)\n            .then(response => {\n                this.setState({\n                    rentalPoints: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveRentalPoint(rentalPoint, index) {\n        CityService.getById(rentalPoint.cityId)\n            .then(response => {\n                this.setState({\n                    city: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        RentalPointService.getById(rentalPoint.id)\n            .then(response => {\n                this.setState({\n                    currentRentalPoint: response.data,\n                    currentIndex: index,\n                    city: this.state.city\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { rentalPoints, currentRentalPoint, currentIndex, city} = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>Rental points</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {rentalPoints &&\n                        rentalPoints.map((rentalPoint, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveRentalPoint(rentalPoint, index)}\n                                key={index}\n                            >\n                                st. {rentalPoint.street}, {rentalPoint.buildingNumber}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentRentalPoint ? (\n                        <div><br/><br/>\n                            <h4>Scooter rental point</h4><br/>\n                            <div>\n                                <strong>Street: </strong>{currentRentalPoint.street}\n                            </div><br/>\n                            <div>\n                                <strong>Building number: </strong>{currentRentalPoint.buildingNumber}\n                            </div><br/>\n                            <div>\n                                <strong>City: </strong>{city==null ? \"\" : city.name}\n                            </div><br/>\n                            <Link\n                                to={\"/scooters-for-user/\" + currentRentalPoint.id}\n                            >\n                                Availability of scooters\n                            </Link><br/>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on rental point</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ScooterModelService from \"../../service/scooter-model.service\"\nimport CityService from \"../../service/city.service\"\n\nexport default class UserCityList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveCities = this.retrieveCities.bind(this);\n        this.setActiveCity = this.setActiveCity.bind(this);\n\n        this.state = {\n            cities: [],\n            currentCity: null,\n            currentIndex: -1\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveCities();\n    }\n\n    retrieveCities() {\n        CityService.getAll()\n            .then(response => {\n                this.setState({\n                    cities: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveCity(city, index) {\n        CityService.getById(city.id)\n            .then(response => {\n                this.setState({\n                    currentCity: response.data,\n                    currentIndex: index\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { cities, currentCity, currentIndex} = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All cities</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {cities &&\n                        cities.map((city, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveCity(city, index)}\n                                key={index}\n                            >\n                                {city.name}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentCity ? (\n                        <div><br/><br/>\n                            <h4>City</h4><br/>\n                            <div>\n                                <strong>Name: </strong>{currentCity.name}\n                            </div><br/>\n                            <Link\n                                to={\"/user-scooter-rental-points/\" + currentCity.id}\n                            >\n                                Scooter rental points\n                            </Link>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on city</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport ScooterService from \"../../service/scooter.service\"\nimport RideService from \"../../service/ride.service\"\nimport RentalPointService from \"../../service/rental-point.service\"\nimport UserService from \"../../service/user.service\"\n\nexport default class RideSessionsForSingleScooter extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveRideSessions = this.retrieveRideSessions.bind(this);\n        this.setActiveRideSession = this.setActiveRideSession.bind(this);\n\n        this.state = {\n            rideSessions: [],\n            currentRideSession: null,\n            currentIndex: -1,\n            user: null,\n            scooter: null\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveRideSessions();\n    }\n\n    retrieveRideSessions() {\n        RideService.getAllByScooterId(this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    rideSessions: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveRideSession(rideSession, index) {\n        ScooterService.getScooter(rideSession.scooterId)\n            .then(response => {\n                this.setState({\n                    scooter: response.data,\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        UserService.getById(rideSession.userId)\n            .then(response => {\n                this.setState({\n                    user: response.data,\n                    currentRideSession: rideSession,\n                    currentIndex: index,\n                    scooter: this.state.scooter,\n                    returnRentalPoint: this.state.returnRentalPoint\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { rideSessions, scooter, currentRideSession, currentIndex, user} = this.state;\n\n        return (\n            <div className=\"list row\">\n                <div className=\"col-md-6\">\n                    <h4>All ride sessions</h4><br/>\n\n                    <ul className=\"list-group\">\n                        {rideSessions &&\n                        rideSessions.map((rideSession, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setActiveRideSession(rideSession, index)}\n                                key={index}\n                            >\n                                Order date: {rideSession.createdOn.substring(0, rideSession.createdOn.indexOf(\"T\"))}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"col-md-6\">\n                    {currentRideSession ? (\n                        <div><br/><br/>\n                            <h4>Ride session</h4><br/>\n                            <div>\n                                <strong>User: </strong>{user==null ? \"\" : user.email}\n                            </div><br/>\n                            <div>\n                                <strong>Scooter price per hour: </strong>{scooter==null ? \"\" : scooter.pricePerHour} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Price for ride: </strong>{currentRideSession.price} BYN\n                            </div><br/>\n                            <div>\n                                <strong>Ride hours: </strong>{currentRideSession.rideHours} hours\n                            </div><br/>\n                            <div>\n                                <strong>Order date: </strong>{currentRideSession.createdOn.substring(0, currentRideSession.createdOn.indexOf(\"T\")) + \" \" + currentRideSession.createdOn.substring(11, 19)}\n                            </div><br/>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on ride session</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport 'react-app-polyfill/stable'\nimport AuthService from \"./service/auth.service\";\n\nimport Login from \"./component/util/login.component\";\nimport Register from \"./component/util/register.component\";\nimport Profile from \"./component/util/profile.component\";\nimport CitiesList from \"./component/city/city-list.component\"\nimport CitiesManagerList from \"./component/city/city-manager-list.component\"\nimport ScooterList from \"./component/scooter/scooter-list.component\";\nimport Scooter from \"./component/scooter/scooter.component\";\nimport ScooterAdd from \"./component/scooter/scooter-add.component\";\nimport RentalPointList from \"./component/scooter-rental-point/rental-point-list.component\";\nimport RentalPoint from \"./component/scooter-rental-point/scooter-rental-point.component\"\nimport RentalPointAdd from \"./component/scooter-rental-point/add-rental-point.component\";\nimport ScooterModelList from \"./component/scooter-model/scooter-model-list.component\"\nimport ScooterModelAdd from \"./component/scooter-model/scooter-model-add.component\"\nimport ScooterModel from \"./component/scooter-model/scooter-model.component\"\nimport CityAdd from \"./component/city/city-add.component\";\nimport City from \"./component/city/city.component\";\nimport SubscriptionList from \"./component/subscription/subscription-list.component\";\nimport SubscriptionAdd from \"./component/subscription/add-subscription.component\";\nimport Subscription from \"./component/subscription/subscription.component\";\nimport User from \"./component/user/user.component\";\nimport UserList from \"./component/user/user-list.component\";\nimport UserSubscriptionList from \"./component/subscription/user-subscription-list.component\";\nimport OrderRide from \"./component/ride/order-ride.component\";\nimport RideSessionsList from \"./component/ride/rides-list.component\";\nimport UserRideSessionsList from \"./component/ride/user-ride-session.list.component\";\nimport UpdateUserProfile from \"./component/user/update-user-profile.component\";\nimport UserScooterList from \"./component/scooter/user-scooter-list.component\";\nimport UserRentalPointList from \"./component/scooter-rental-point/user-scooter-rental-point.component\";\nimport UserCityList from \"./component/city/user-city-list.component\";\nimport RideSessionsForSingleScooter from \"./component/ride/ride-session-for-single-scooter.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            {!currentUser ? (\n                <div className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Link to={\"/cities\"} className=\"nav-link\">\n                      View our rental points\n                    </Link>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <Link to={\"/login\"} className=\"nav-link\">\n                      Sing in\n                    </Link>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <Link to={\"/register\"} className=\"nav-link\">\n                      Sign up\n                    </Link>\n                  </li>\n                </div>\n            ) : (\"\")}\n            {currentUser && currentUser.role.includes(\"ROLE_ADMIN\") ? (\n                <div className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Link to={\"/profile\"} className=\"nav-link\">\n                      {currentUser.email}\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/login\"} className=\"nav-link\" onClick={this.logOut}>\n                      Log out\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/scooters\"} className=\"nav-link\">\n                      Scooters\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/rental-points\"} className=\"nav-link\">\n                      Rental points\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/scooter-models\"} className=\"nav-link\">\n                      Models\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/cities-manager\"} className=\"nav-link\">\n                      Cities\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/subscriptions-manager\"} className=\"nav-link\">\n                      Subscriptions\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/users\"} className=\"nav-link\">\n                      Users\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/ride-sessions\"} className=\"nav-link\">\n                      Ride sessions\n                    </Link>\n                  </li>\n                </div>\n            ) : (\"\")}\n            {currentUser && currentUser.role.includes(\"ROLE_MANAGER\") ? (\n                <div className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Link to={\"/profile\"} className=\"nav-link\">\n                      {currentUser.email}\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/login\"} className=\"nav-link\" onClick={this.logOut}>\n                      Log out\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/scooters\"} className=\"nav-link\">\n                      Scooters\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/rental-points\"} className=\"nav-link\">\n                      Rental points\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/scooter-models\"} className=\"nav-link\">\n                      Models\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/cities-manager\"} className=\"nav-link\">\n                      Cities\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/subscriptions-manager\"} className=\"nav-link\">\n                      Subscriptions\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/ride-sessions\"} className=\"nav-link\">\n                      RideSessions\n                    </Link>\n                  </li>\n                </div>\n            ) : (\"\")}\n            {currentUser && currentUser.role.includes(\"ROLE_USER\") ? (\n                <div className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Link to={\"/profile\"} className=\"nav-link\">\n                      {currentUser.email}\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/login\"} className=\"nav-link\" onClick={this.logOut}>\n                      Log out\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/user-list-cities\"} className=\"nav-link\">\n                      Where can you find us?\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/user-ride-sessions/\" + currentUser.id} className=\"nav-link\">\n                      Ride history\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/user-subscriptions/\" + currentUser.id} className=\"nav-link\">\n                      Subscriptions\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={\"/order-ride/\" + currentUser.id} className=\"nav-link\">\n                      Order ride\n                    </Link>\n                  </li>\n                </div>\n            ) : (\"\")}\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route exact path=\"/cities\" component={CitiesList} />\n              <Route exact path=\"/scooters\" component={ScooterList} />\n              <Route path=\"/scooters/:id\" component={Scooter} />\n              <Route path=\"/add-scooter\" component={ScooterAdd} />\n              <Route path=\"/rental-points\" component={RentalPointList} />\n              <Route path=\"/scooter-rental-points/:id\" component={RentalPoint} />\n              <Route path=\"/add-rental-point\" component={RentalPointAdd} />\n              <Route exact path=\"/scooter-models\" component={ScooterModelList} />\n              <Route path=\"/scooter-models/:id\" component={ScooterModel} />\n              <Route path=\"/add-scooter-model\" component={ScooterModelAdd} />\n              <Route path=\"/cities-manager\" component={CitiesManagerList} />\n              <Route path=\"/add-city\" component={CityAdd} />\n              <Route path=\"/cities/:id\" component={City} />\n              <Route path=\"/subscriptions-manager\" component={SubscriptionList} />\n              <Route path=\"/add-subscription\" component={SubscriptionAdd} />\n              <Route path=\"/subscriptions/:id\" component={Subscription} />\n              <Route path=\"/users/:id\" component={User} />\n              <Route path=\"/users\" component={UserList} />\n              <Route path=\"/user-subscriptions/:id\" component={UserSubscriptionList} />\n              <Route path=\"/order-ride/:id\" component={OrderRide} />\n              <Route path=\"/ride-sessions\" component={RideSessionsList} />\n              <Route path=\"/user-ride-sessions/:id\" component={UserRideSessionsList} />\n              <Route path=\"/edit-profile/:id\" component={UpdateUserProfile} />\n              <Route path=\"/scooters-for-user/:id\" component={UserScooterList} />\n              <Route path=\"/user-scooter-rental-points/:id\" component={UserRentalPointList} />\n              <Route path=\"/user-list-cities\" component={UserCityList} />\n              <Route path=\"/ride-sessions-for-single-scooter/:id\" component={RideSessionsForSingleScooter} />\n            </Switch>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}